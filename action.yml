name: 'Rally base action'
description: 'Action to build a base image with install dependicies if the yarn lock file has changed'
inputs: 
  imageName:
    description: 'The name of the image to build'
    required: true
  namespace:
    description: 'the namespace field in ghcr.io/NAMESPACE/NEW_IMAGE_NAME:TAG'
    required: true
  dockerfilePath:
    description: 'The path of the dockerfile to build'
    required: false
    default: Dockerfile.base
  datadogApiKey:
    description: 'Datadog api key'
    required: false
    default: none

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}

    - name: Setup yarn cache
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'

    - name: Compute yarn lock hash
      shell: bash
      run: echo CURRENT_YARN_LOCK_HASH="$(cat yarn.lock package.json | sha256sum | cut -d ' ' -f 1)" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Set image tag env
      shell: bash
      run: |
        echo IMAGE_TAG="ghcr.io/${{ inputs.namespace }}/${{ inputs.imageName }}" >> $GITHUB_ENV
      
    - name: Pull base image
      id: pull_base_image
      shell: bash
      run: |
        docker pull ${{ env.IMAGE_TAG }} || echo "STATUS=failed" >> $GITHUB_OUTPUT
      continue-on-error: true

    - name: Get previous yarn lock hash
      id: get_previous_yarn_lock_hash
      if: steps.pull_base_image.outputs.STATUS != 'failed'
      shell: bash
      run: |
        echo PREVIOUS_YARN_LOCK_HASH="$(docker inspect --format='{{index .Config.Labels "yarn-lock-hash"}}' ${{ env.IMAGE_TAG }})" >> $GITHUB_ENV

    - name: Compare yarn.lock hash with label stored yarn.lock hash
      id: yarn_lock_hash_check
      if: steps.get_previous_yarn_lock_hash.outcome == 'success'
      shell: bash
      run: if [[ "${{ env.PREVIOUS_YARN_LOCK_HASH }}" == "${{ env.CURRENT_YARN_LOCK_HASH }}" ]]; then echo "SHOULD_REBUILD_BASE_IMAGE=false" >> $GITHUB_OUTPUT; else echo "SHOULD_REBUILD_BASE_IMAGE=true" >> $GITHUB_OUTPUT; fi

    - name: Build & push new base image
      id: build_new_base_image
      if: steps.pull_base_image.outputs.STATUS == 'failed' || steps.yarn_lock_hash_check.outputs.SHOULD_REBUILD_BASE_IMAGE == 'true'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ${{inputs.dockerfilePath}}
        tags: ${{ env.IMAGE_TAG }}:latest
        push: true
        build-args: |
          DD_API_KEY="${{inputs.datadogApiKey}}"
        labels: |
          yarn-lock-hash="${{ env.CURRENT_YARN_LOCK_HASH }}"