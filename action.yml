name: 'Rally base action'
description: 'Action to build a base image with install dependicies if the yarn lock file has changed'
inputs: 
  imageName:
    description: 'The name of the image to build'
    required: true
  namespace:
    description: 'the namespace field in ghcr.io/NAMESPACE/NEW_IMAGE_NAME:TAG'
    required: false
  dockerfilePath:
    description: 'The path of the dockerfile to build'
    required: false
    default: Dockerfile.base
  datadogApiKey:
    description: 'Datadog ApiKey'
    required: false
    default: none

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}

    - name: Setup yarn cache
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}


    - name: Pull base image
      id: pull_base_image
      shell: bash
      run: docker pull ghcr.io/${{ inputs.namespace }}/${{ inputs.imageName }}

    - name: Store yarn.lock hash
      id: store_yarn_lock_hash
      if: steps.pull_base_image.outcome == 'success'
      shell: bash
      run: |
        PREVIOUS_YARN_LOCK_HASH="$(docker inspect --format='{{index .Config.Labels "com.rallyuxr.yarn-lock-hash"}}' ${{ inputs.imageName }})"
        CURRENT_YARN_LOCK_HASH="$(cat yarn.lock | sha256sum | cut -d " " -f 1)"

    - name: Compare yarn.lock hash with label stored yarn.lock hash
      id: yarn_lock_hash_check
      if: steps.store_yarn_lock_hash.outcome == 'success'
      shell: bash
      run: if [[ "$PREVIOUS_YARN_LOCK_HASH" == "$CURRENT_YARN_LOCK_HASH" ]]; then echo "SHOULD_REBUILD_BASE_IMAGE=false" >> $GITHUB_OUTPUT; else echo "SHOULD_REBUILD_BASE_IMAGE=true" >> $GITHUB_OUTPUT; fi

    - name: Build & push new base image
      id: build_new_base_image
      if: steps.yarn_lock_hash_check.outputs.SHOULD_REBUILD_BASE_IMAGE == 'true'
      shell: bash
      run: |
        docker build -f ${{ inputs.dockerfilePath }} . -t ${{ inputs.imageName }} --label com.rallyuxr.yarn-lock-hash=$(cat yarn.lock | sha256sum | cut -d " " -f 1)
        docker tag ${{ inputs.imageName }} ghcr.io/${{ inputs.namespace }}/${{ inputs.imageName }}:latest
        docker push ghcr.io/${{ inputs.namespace }}/${{ inputs.imageName }}:latest

    - name: Tag base image for dependent images to use
      if: steps.yarn_lock_hash_check.outputs.SHOULD_REBUILD_BASE_IMAGE == 'false'
      shell: bash
      run: docker tag ghcr.io/${{ inputs.namespace }}/${{ inputs.imageName }} ${{ inputs.imageName }}:latest